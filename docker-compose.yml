name: fbaserver
services:
  init-perms:  # service to create and fix permissions
    image: alpine:3.20
    container_name: fba-init-container
    command: >
      sh -c "
      mkdir -p /staticfiles /media &&
      chown -R 10001:10001 /staticfiles /media &&
      chmod -R 755 /staticfiles /media
      "
    volumes:
      - /var/www/fbaserver/static:/staticfiles
      - /var/www/fbaserver/media:/media
    restart: "no"
  server:
    # restart: unless-stopped
    # image: ghcr.io/<USERNAME>/<REPO_NAME>/server:latest
    image: ghcr.io/tarik1bosunia/fbaserver:latest
    container_name: fbaserver-container
    # restart: unless-stopped
    build:
      context: .
      args:
        REMOVE_MIGRATIONS: "false"   # set "true" only for dev builds if needed
    volumes:
      # Use absolute path for static & media volumes for Nginx + Django
      - /var/www/fbaserver/static:/app/staticfiles      
      - /var/www/fbaserver/media:/app/media
      - ./.env:/app/.env

    env_file:
      - .env
    environment:
      # Ensure these variables match the DATABASES setting in your Django settings.py file
      - DJANGO_ENV=production
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST} # This should be the service name of the PostgreSQL container
      - DB_PORT=${DB_PORT}
      - REDIS_URL=${REDIS_URL}
      - DEBUG=${DEBUG} # Pass DEBUG from .env to the container
      #- REDIS_URL=redis://redis:6379/0  # Redis connection URL
      # - DJANGO_SETTINGS_MODULE=your_project.settings.production

    ports:
      - 8000:8000

    depends_on:
      init-perms:  # Ensure volumes are ready before app runs
        condition: service_completed_successfully
      db:
        condition: service_healthy
      redis:  #  Wait for Redis to be ready before starting server
        condition: service_started  



    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
  db:
    image: pgvector/pgvector:pg17 # https://hub.docker.com/r/pgvector/pgvector
    container_name: fba-postgres-container
    restart: always

    env_file:
      - .env

    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

    hostname: ${DB_HOST}
    ports:
      - "5432:${DB_PORT}"
    # user: ${DB_USER}
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql  # Load pgvector extension
    

    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    # image: redis:7.4.5-alpine3.21
    image: redis/redis-stack-server:7.2.0-v18
    container_name: redis
    ports:
      - "6379:6379"
    env_file:
      - .env  
    volumes:
      - redis-data:/data
    restart: unless-stopped    
volumes:
  db-data:
  redis-data:

