# Generated by Django 5.2.2 on 2025-07-13 10:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text="Identifier used in APIs, e.g., 'gemini-2.0-flash'", max_length=100, unique=True)),
                ('name', models.CharField(help_text="Human-readable name, e.g., 'Gemini 2.0 Flash'", max_length=100)),
                ('is_custom', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AIConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('response_tone', models.CharField(choices=[('friendly', 'Friendly and Casual'), ('professional', 'Professional'), ('formal', 'Formal'), ('helpful', 'Helpful and Informative')], default='friendly', max_length=20)),
                ('brand_persona', models.TextField(default='Represent our brand as a knowledgeable, professional, and customer-focused organization. Respond in a friendly yet polished tone that balances expertise with approachability.\n\nKey guidelines:\n1. Be concise but thorough\n2. Maintain professional yet warm tone\n3. Focus on accurate, helpful information\n4. Protect user privacy and data security\n5. Use clear, accessible language\n\nCompany values:\n- Commitment to excellence\n- Customer-first approach\n- Ethical business practices')),
                ('auto_respond', models.BooleanField(default=True)),
                ('generate_suggestions', models.BooleanField(default=True)),
                ('human_handoff', models.BooleanField(default=True)),
                ('learn_from_history', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ai_config', to=settings.AUTH_USER_MODEL)),
                ('ai_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='configurations', to='chatbot.aimodel')),
            ],
        ),
    ]
