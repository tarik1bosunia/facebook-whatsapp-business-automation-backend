# Generated by Django 5.2.2 on 2025-07-13 10:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('website', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='business', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FacebookIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform_id', models.CharField(blank=True, help_text='Facebook Page ID or WhatsApp Number ID', max_length=255, null=True, verbose_name='Platform ID')),
                ('access_token', models.CharField(blank=True, help_text='OAuth token for platform API access', max_length=1000, null=True, verbose_name='Access Token')),
                ('verify_token', models.CharField(blank=True, help_text='Token for webhook verification', max_length=100, null=True, verbose_name='Verify Token')),
                ('is_connected', models.BooleanField(default=True, help_text='Whether the integration is active', verbose_name='Is Connected')),
                ('is_send_auto_reply', models.BooleanField(default=True, help_text='Enable automatic responses to messages', verbose_name='Auto Replies Enabled')),
                ('is_send_notification', models.BooleanField(default=True, help_text='Enable notifications for new messages', verbose_name='Notifications Enabled')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_integration', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Facebook Integration',
                'verbose_name_plural': 'Facebook Integrations',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Category Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_categories', to=settings.AUTH_USER_MODEL, verbose_name='Business Owner')),
            ],
            options={
                'verbose_name': 'Product Category',
                'verbose_name_plural': 'Product Categories',
                'ordering': ['name'],
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Product Name')),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('stock', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='business.productcategory')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Service Name')),
                ('description', models.TextField(blank=True, verbose_name='Detailed Description')),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Starting Price')),
                ('duration_minutes', models.PositiveIntegerField(help_text='Approximate time needed to complete the service', verbose_name='Duration (minutes)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active Service')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to=settings.AUTH_USER_MODEL, verbose_name='Service Provider')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WhatsAppIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform_id', models.CharField(blank=True, help_text='Facebook Page ID or WhatsApp Number ID', max_length=255, null=True, verbose_name='Platform ID')),
                ('access_token', models.CharField(blank=True, help_text='OAuth token for platform API access', max_length=1000, null=True, verbose_name='Access Token')),
                ('verify_token', models.CharField(blank=True, help_text='Token for webhook verification', max_length=100, null=True, verbose_name='Verify Token')),
                ('is_connected', models.BooleanField(default=True, help_text='Whether the integration is active', verbose_name='Is Connected')),
                ('is_send_auto_reply', models.BooleanField(default=True, help_text='Enable automatic responses to messages', verbose_name='Auto Replies Enabled')),
                ('is_send_notification', models.BooleanField(default=True, help_text='Enable notifications for new messages', verbose_name='Notifications Enabled')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_integration', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'WhatsApp Integration',
                'verbose_name_plural': 'WhatsApp Integrations',
            },
        ),
        migrations.CreateModel(
            name='BusinessHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], max_length=10)),
                ('open_time', models.TimeField(blank=True, null=True)),
                ('close_time', models.TimeField(blank=True, null=True)),
                ('is_closed', models.BooleanField(default=False)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hours', to='business.businessprofile')),
            ],
            options={
                'ordering': ['id'],
                'unique_together': {('business', 'day')},
            },
        ),
    ]
